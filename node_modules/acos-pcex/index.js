'use strict';

var fs = require('fs');
var htmlencode = require('htmlencode').htmlEncode;
var PCEX = function() {};


PCEX.addToHead = function(params) {
  return '<meta charset="utf-8">'+
'<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">'+
'<meta http-equiv="x-ua-compatible" content="ie=edge">'+
'<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />'+
'<meta http-equiv="Pragma" content="no-cache" />'+
'<meta http-equiv="Expires" content="0" />'+

'<title>Program Construction Examples</title>'+
'<!-- Font Awesome --> '+
'<link rel="stylesheet" href="/acos/static/pcex/css/font-awesome.min.css"> '+
'<!-- Bootstrap core CSS --> '+
'<link href="/acos/static/pcex/css/bootstrap.min.css" rel="stylesheet"> '+

'<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet"> '+

'<link rel="stylesheet" href="/acos/static/pcex/css/materialize.min.css"> '+

'<link rel="stylesheet" href="/acos/static/pcex/css/jquery.webui-popover.min.css"> '+

'<link href="/acos/static/pcex/css/mdb.min.css" rel="stylesheet"> '+

'<link href="/acos/static/pcex/css/jquery-ui.min.css" rel="stylesheet"> '+
'<link href="/acos/static/pcex/css/vs.css" rel="stylesheet" > '+
'<!-- Your custom styles (optional) --> '+
'<link href="/acos/static/pcex/css/style.css?v=201801041411" rel="stylesheet">';
};

PCEX.handleEvent = function(event, payload, req, res, protocolPayload, responseObj, cb) {
  if (event == 'log') {
    var dir = PCEX.config.logDirectory + '/pcex/' + req.params.contentPackage;
    fs.mkdir(dir, '0775¨', function(err) {
      var name = payload.animationId.replace(/\.|\/|\\|~/g, "-") + '.log';
      var data = new Date().toISOString() + ' ' + payload.logId + ' ' + JSON.stringify(payload.log) + ' ' + JSON.stringify(protocolPayload || {}) + '\n';
      fs.writeFile(dir + '/' + name, data, { flag: 'a' }, function(err) {
        cb(event, payload, req, res, protocolPayload, responseObj);
      });
    });
  } else {
    cb(event, payload, req, res, protocolPayload, responseObj);
  }
};


PCEX.addToBody = function(params) {
	return '<div class="container-fluid" style="display: none;">\n' +
    '<div id="goal-header" class="row">\n' +
        
        '<div id="goal_column" class="col-sm-6 col-md-8 col-lg-9 col-xl-10">\n' +
			'<div class="card">\n' +
				'<p id="goal_title" class="card-header white-text"></p>\n' +
				'<div class="card-block">\n' +
					'<pre><p id="goal_description" class="card-text"></p></pre>\n' +
				'</div>\n' +
			'</div>\n' +
		'</div>\n' +
		
		
    '</div>\n' +
	'<div id="draggable" class="row">\n' +
		'<div class="col-sm-8">\n' +
			'<div class="card">\n' +
				'<div id="div_code" class="panel-body"></div>\n' +
			'</div>\n' +
		'</div>\n' +
		'<div id="scrollable" class="col-sm-4" >\n' +
			'<div id="scrollable-content">\n' +
				
				'<a id="start-animation-button" class="waves-effect waves-light btn">Explain the program <img src="/acos/static/pcex/img/teacher_36.png"></img></a>\n' +
				
				 '<div id="checkCollapsible" class="panel-collapse collapse">\n' +
					'<div class="card card-danger card-primary mb-3">\n' +
					  '<div id="check-result-block" class="card-block">\n' +
							'<h5 id="check-result-title"></h5>\n' +
							'<pre><p id="check-result-message"></p></pre>\n' +
						'<footer>\n' +
							'<a id="clear-button" class="btn btn-danger btn-sm">Clear</a>\n' +
							'<a id="show-correct-button" class="btn btn-success btn-sm">Show Me Correct Program</a>\n' +
							'<a id="show-hint-button" class="btn btn-warning btn-sm">Show Me Hint</a>\n' +
							'<a id="show-message-details" class="btn btn-secondary btn-sm">Tell me what’s wrong</a>\n' +
						'</footer>\n' +
					   '</div>\n' +
					'</div>\n' +
				'</div>\n' +
				'<div id="explanation-div" class="card" style="display: none;">\n' +
					'<div id="explanation-title" class="card-header secondary-color white-text ">\n' +
					'<span class="hidden-md-down">Explanations</span>\n' +
					'<a id="animation-back-button" class="waves-effect waves-light btn btn-sm" style="display: none;" disabled="true"><i class="material-icons left">undo</i>Previous</a>\n' +
					'<a id="animation-next-button" class="waves-effect waves-light btn btn-sm" style="display: none;"><i class="material-icons right">redo</i>Next</a>\n' +
					'</div>\n' +
					'<div id="explanation" class="card-block">\n' +
					'</div>\n' +
				'</div>\n' +
				'<div id="hint-div" class="card" style="display: none;">\n' +
					'<div class="card-header white-text hint-title">Hint \n' +
						'<button id="close-hint-button" type="button" class="close" aria-label="Close">\n' +
							'<span aria-hidden="true">&times;</span>\n' +
						'</button>\n' +
					'</div>\n' +
					'<div id="hint" class="card-block">\n' +
					'</div>\n' +
				'</div>\n' +
				'<div id="drag-tile-div" class="card" style="display: none;">\n' +
					'<div id="drag-tile-title" class="card-header secondary-color white-text">Drag a tile from here \n' +
						'<a id="check-button" class="waves-effect waves-light btn btn-challenge" disabled="true" data-toggle="collapse" data-target="#checkCollapsible" aria-expanded="false" style="display: none;"><i class="material-icons right">play_circle_outline</i>CHECK</a>\n' +
					'</div>\n' +
				
					'<div id="tiles" class="card-block">\n' +
					'<div/>\n' +
				'</div>\n' +
			'</div>\n' +
		'</div>\n' +
	'</div>\n' +
'</div>\n' +
'<div id="overlay"></div>\n' +
  
'<div id="result-modal" class="modal modal-fixed-footer">\n' +
	'<div class="modal-content">\n' +
		'<div id="modal-check-result-title"></div>\n' +
		'<div id="modal-check-result-div">\n' +
			'<pre><hr><p id="modal-check-result-message"></p></pre>\n' +
		'</div>\n' +
		'<div id="modal-output-div" class="no-gutters">\n' +
			'<hr>\n' +
			'<div class="row vdivide">\n' +
                '<div class="col-sm-6">\n' +
					'<div>\n' +
						'<p id="modal-current-output" class="modal-sub-title">Current Output</p>\n' +
						'<pre><p id="modal-current-output-message"></p></pre>\n' +
					'</div>\n' +
                '</div>\n' +
				'<div class="col-sm-6">\n' +
					'<div>\n' +
						'<p id="modal-expected-output" class="modal-sub-title">Expected Output</p>\n' +
						'<pre><p id="modal-expected-output-message"></p></pre>\n' +
					'</div>\n' +
                '</div>\n' +
			'</div>\n' +
		'</div>\n' +
	'</div>\n' +
	
	'<div class="modal-footer">\n' +
      '<a class="modal-action modal-close waves-effect waves-light btn btn-danger">Close</a>\n' +
    '</div>\n' +
'</div>\n' + 

	'<!-- SCRIPTS -->\n' +
    '<!-- JQuery -->\n' +
    '<script type="text/javascript" src="/acos/static/pcex/js/jquery-3.1.1.min.js"></script>\n' +
	'<script type="text/javascript" src="/acos/static/pcex/js/jquery-ui.min.js"></script>\n' +
	
    '<!-- Bootstrap tooltips -->\n' +
    '<script type="text/javascript" src="/acos/static/pcex/js/tether.min.js"></script>\n' +
    '<!-- Bootstrap core JavaScript -->\n' +
    '<script type="text/javascript" src="/acos/static/pcex/js/bootstrap.min.js"></script>\n' +
	
    '<script src="/acos/static/pcex/js/materialize.min.js"></script>\n' +
	
	'<script src="/acos/static/pcex/js/jquery.webui-popover.min.js"></script>\n' +
	
	'<script src="/acos/static/pcex/js/jquery.matchHeight.js" type="text/javascript"></script>\n' +
	
	'<script src="/acos/static/pcex/js/highlight.pack-withlinenumbers.js" type="text/javascript"></script>\n' +
	'<script src="/acos/static/pcex/js/highlight.pack.js" type="text/javascript"></script>\n' +
	'<script src="/acos/static/pcex/js/highlightjs-line-numbers.js" type="text/javascript"></script>\n' +
	'<script src="/acos/static/pcex/js/url.min.js" type="text/javascript"></script>\n' +
	'<script src="/acos/static/pcex/js/js.cookie.js" type="text/javascript"></script>\n' +
	'<script src="/acos/static/pcex/js/levenshtein.min.js" type="text/javascript"></script>\n' +
	'<script src="/acos/static/pcex/pcex.js?v=201803161734" type="text/javascript"></script>';

};

PCEX.initialize = function(req, params, handlers, cb) {
  // Initialize the content type
  params.headContent += PCEX.addToHead(params);
  params.bodyContent += PCEX.addToBody(params);

  // Initialize the content package
  handlers.contentPackages[req.params.contentPackage].initialize(req, params, handlers, function() {
    cb();
  });

};

PCEX.register = function(handlers, app, conf) {
    handlers.contentTypes.pcex = PCEX;
    PCEX.logDirectory = conf.logDirectory + '/pcex/';
    try {
      fs.mkdir(PCEX.logDirectory, '0775', function(err) {});
    } catch(e) {
      console.log('Couldn\'t create direcotry ' + PCEX.logDirectory);
    }
};

PCEX.namespace = 'pcex';
PCEX.installedContentPackages = [];
PCEX.packageType = 'content-type';
PCEX.meta = {
    'name': 'pcex',
    'shortDescription': 'Content type for PCEX exercises.',
    'description': '',
    'author': 'Kamil',
    'license': 'MIT',
    'version': '0.2.0',
    'url': ''
};

module.exports = PCEX;